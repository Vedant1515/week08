name: Frontend CI â€” Build, Push

on:
  pull_request:
    branches: [ develop, main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend_ci.yml'
  push:
    branches: [ develop, main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend_ci.yml'
  workflow_dispatch: {}

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

concurrency:
  group: frontend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_push_frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to ACR
        env:
          ACR_LOGIN_SERVER: ${{ env.ACR_LOGIN_SERVER }}
        run: |
          set -e
          if [ -z "$ACR_LOGIN_SERVER" ]; then
            echo "ACR_LOGIN_SERVER secret missing (e.g. myacr.azurecr.io)"
            exit 1
          fi
          ACR_NAME="$(echo "$ACR_LOGIN_SERVER" | cut -d. -f1)"
          TOKEN="$(az acr login --name "$ACR_NAME" --expose-token --output tsv --query accessToken)"
          echo "$TOKEN" | docker login "$ACR_LOGIN_SERVER" -u 00000000-0000-0000-0000-000000000000 --password-stdin

      - name: Build and push image
        run: |
          set -e
          docker build -t $ACR_LOGIN_SERVER/frontend:latest ./frontend
          docker tag  $ACR_LOGIN_SERVER/frontend:latest $ACR_LOGIN_SERVER/frontend:$IMAGE_TAG
          docker push $ACR_LOGIN_SERVER/frontend:latest
          docker push $ACR_LOGIN_SERVER/frontend:$IMAGE_TAG
